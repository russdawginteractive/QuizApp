@*@model IEnumerable<QuizApp.Data.Entities.Models.Quiz>*@

@{
	ViewData["Title"] = "Index";
}

<h2>Index</h2>
<div id="gridContainer">
	@(Html.Kendo().Grid<QuizApp.Data.Entities.Models.Quiz>()
				.Name("QuizEditGrid")
				.Columns(columns =>
				{
					columns.Bound(c => c.Title);
					columns.Bound(c => c.Active);
					columns.Command(command => { command.Edit(); command.Destroy(); command.Custom("Questions").Click("clickQuestions"); });

				})
				.ToolBar(toolbar => toolbar.Create())
				.Scrollable()
				.Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("Quiz"))
				.Sortable()
				.DataSource(dataSource => dataSource
					.Ajax()
					.Events(events => events.Error("error_handler"))
					.Model(model => model.Id(p => p.Id))
					.Create(update => update.Action("Quiz_Create", "Quiz"))
					.Read(read => read.Action("Quiz_Read", "Quiz"))
					.Update(update => update.Action("Quiz_Update", "Quiz"))
					.Destroy(update => update.Action("Quiz_Destroy", "Quiz"))
				)
	)


</div>
<script type="text/javascript">
	var error_handler = function (e){
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
	}
	var clickQuestions = function (e) {
		console.log(e);
		//alert("This is a test!");
		var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
		console.log(dataItem.Id);
		window.location.href = "/Question/Index/" + dataItem.Id;
	}
</script>
@*<p>
		<a asp-action="Create">Create New</a>
	</p>
	<table class="table">
		<thead>
			<tr>
				<th>
					@Html.DisplayNameFor(model => model.Title)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Description)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.EventId)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.PathToQuizReference)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Active)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Created)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Modified)
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.Title)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Description)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.EventId)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.PathToQuizReference)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Active)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Created)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Modified)
					</td>
					<td>
						<a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
						<a asp-action="Details" asp-route-id="@item.Id">Details</a> |
						<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
					</td>
				</tr>
			}
		</tbody>
	</table>*@
